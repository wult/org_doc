** 类的记录
*** THD
    THD是每个客户端连接都会创建一个独立的线程类作为线程连接和描述,线程和连接是一一对应关系,THD类包含线程的许多有用信息,处理客户端连接不是线程唯一用途,mysql还有一些系统线程，如复制服务器进程，信号处理...本类们于 sql_class.h
*** LEX
** sql源代码分析
#+BEGIN_SRC plantuml :file images/lex_thd_rel.png :cmdline -charset utf-8
Item -- LEX
TABLE_LIST -- LEX
SELECT_LEX -- LEX
SELECT_UNIT -- LEX
LEX -- THD
THD -- Protocol
THD -- NET
TABLE -- THD
TABLE -- TABLE_SHARE
TABLE -- handle
TABLE -- JOIN
#+END_SRC
- LEX,Item,SELECT_LEX,SELECT_UNIT,TABLE_LIST,SQL语法分析及SQL语句抽象表示
   Item用于实现表达式，如查询,函数,where,order,group ,on 子句
   SELECT_LEX,SELECT_UNIT用来表达select() 和 Union操作
- TABLE_SHARE和TABLE
   前者代表表的元信息,例如字段定义,索引定义,后者代表一个打开实例
- handler 存储引擎接口
- JOIN,Sql的执行引擎
** 表定义和表
** SQL语法解析与执行
*** SELECT_NODE,SELECT_LEX和SELECT_UNIT
    st_select_lex_unit: unit of selects(UNION,INTERSET,...)
    st_select_lex: 普通的select语句
** 执行流程
*** 解析sql流程
    解析sql时，顺序是:
- sql_connect.cc的handle_one_connection()
- sql_connect.cc的do_handle_one_connection()
- sql_parse.cc的do_command()
- sql_parse.cc的dispatch_command()
- sql_parse.cc的mysql_parse()
- sql_lex.cc的lex_start()
sql_parse.cc的mysql_parse()执行完lex_start()方法后,调用parse_sql(),
在parse_sql()中会调用MYSQLparse(thd)方法,这个方法执行yacc的语法解析,
正常是应该调用yyparse不过sql_yacc.cc中有定义了: #define yyparse MYSQLparse
